{"version":3,"sources":["components/About.js","components/perStateData/Graphs.js","components/perStateData/VisualizationsPerState.js","components/PerState.js","components/homeData/Visualizations.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["About","style","margin","Jumbotron","className","Graphs","props","useState","setCurrent","historicalPositive","sethistoricalPositive","historicalDate","setHistoricalDate","setHistorical","positiveIncrease","setPositiveIncrease","death","setDeath","currentHospitalization","setCurrentHospitalization","inIcuCurrently","setInIcuCurrently","recovered","setRecovered","useEffect","a","currentState","state","toLowerCase","axios","result","resultHistorical","data","map","positive","reverse","date","customDateFormatter","hospitalizedCurrently","fetchData","totalPositiveData","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","positiveIncreaseData","currentHealthCareData","dateString","toString","year","substring","month","day","bottom","cascade","VisualizationsPerState","console","log","PerState","dropdownOpen","setDropdownOpen","selectedState","setSelectedState","go","setGo","marginBottom","Dropdown","isOpen","toggle","prevState","onClick","DropdownToggle","caret","DropdownMenu","modifiers","setMaxHeight","enabled","fn","styles","overflow","maxHeight","DropdownItem","key","Button","color","disabled","App","to","Home","Visualizations","setIsOpen","Navbar","light","expand","NavbarToggler","Collapse","navbar","Nav","NavItem","NavbarText","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.240335db.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../App.css\";\r\nimport { Jumbotron } from \"reactstrap\";\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div style={{ margin: \"1%\" }}>\r\n      <Fade>\r\n        <Jumbotron>\r\n          <h1 className=\"display-5\">About</h1>\r\n          <p className=\"lead\">\r\n            Open Source Project dedicated to graphing Covid-19\r\n          </p>\r\n          <hr className=\"my-2\" />\r\n          <br />\r\n          github: https://github.com/benlambert43/covid\r\n        </Jumbotron>\r\n      </Fade>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../../App.css\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\nfunction Graphs(props) {\r\n  // eslint-disable-next-line\r\n  const [current, setCurrent] = useState({});\r\n  const [historicalPositive, sethistoricalPositive] = useState([]);\r\n  const [historicalDate, setHistoricalDate] = useState([]);\r\n  // eslint-disable-next-line\r\n  const [historical, setHistorical] = useState([]);\r\n  const [positiveIncrease, setPositiveIncrease] = useState([]);\r\n  const [death, setDeath] = useState([]);\r\n  const [currentHospitalization, setCurrentHospitalization] = useState([]);\r\n  const [inIcuCurrently, setInIcuCurrently] = useState([]);\r\n  const [recovered, setRecovered] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const currentState = props.state.toLowerCase();\r\n      const result = await axios(\r\n        `https://covidtracking.com/api/v1/states/${currentState}/current.json`\r\n      );\r\n      const resultHistorical = await axios(\r\n        `https://covidtracking.com/api/v1/states/${currentState}/daily.json`\r\n      );\r\n      setCurrent(result.data);\r\n      sethistoricalPositive(\r\n        resultHistorical.data.map(({ positive }) => positive).reverse()\r\n      );\r\n      setDeath(resultHistorical.data.map(({ death }) => death).reverse());\r\n      setHistoricalDate(\r\n        resultHistorical.data\r\n          .map(({ date }) => customDateFormatter(date))\r\n          .reverse()\r\n      );\r\n      setPositiveIncrease(\r\n        resultHistorical.data\r\n          .map(({ positiveIncrease }) => positiveIncrease)\r\n          .reverse()\r\n      );\r\n      setHistorical(\r\n        resultHistorical.data.map(({ date, positive, positiveIncrease }) => {\r\n          return { date, positive, positiveIncrease };\r\n        })\r\n      );\r\n      setCurrentHospitalization(\r\n        resultHistorical.data\r\n          .map(({ hospitalizedCurrently }) => hospitalizedCurrently)\r\n          .reverse()\r\n      );\r\n      setInIcuCurrently(\r\n        resultHistorical.data\r\n          .map(({ inIcuCurrently }) => inIcuCurrently)\r\n          .reverse()\r\n      );\r\n      setRecovered(\r\n        resultHistorical.data.map(({ recovered }) => recovered).reverse()\r\n      );\r\n    };\r\n    fetchData();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const totalPositiveData = {\r\n    labels: historicalDate,\r\n    datasets: [\r\n      {\r\n        label: \"Total Positive Cases\",\r\n        fill: false,\r\n        lineTension: 0.1,\r\n        backgroundColor: \"rgba(75,192,192,0.4)\",\r\n        borderColor: \"rgba(75,192,192,1)\",\r\n        borderCapStyle: \"butt\",\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: \"miter\",\r\n        pointBorderColor: \"rgba(75,192,192,1)\",\r\n        pointBackgroundColor: \"#fff\",\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: historicalPositive,\r\n      },\r\n      {\r\n        label: \"Total Deaths\",\r\n        fill: false,\r\n        lineTension: 0.1,\r\n        backgroundColor: \"#808080\",\r\n        borderColor: \"#808080\",\r\n        borderCapStyle: \"butt\",\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: \"miter\",\r\n        pointBorderColor: \"#f5f5f5\",\r\n        pointBackgroundColor: \"#fff\",\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: \"#f5f5f5\",\r\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: death,\r\n      },\r\n      {\r\n        label: \"Recovered\",\r\n        fill: false,\r\n        lineTension: 0.1,\r\n        backgroundColor: \"green\",\r\n        borderColor: \"green\",\r\n        borderCapStyle: \"butt\",\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: \"miter\",\r\n        pointBorderColor: \"#f5f5f5\",\r\n        pointBackgroundColor: \"#fff\",\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: \"#f5f5f5\",\r\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: recovered,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const positiveIncreaseData = {\r\n    labels: historicalDate,\r\n    datasets: [\r\n      {\r\n        label: \"Daily Increase in Positive Cases\",\r\n        fill: false,\r\n        lineTension: 0.3,\r\n        backgroundColor: \"#EE4900\",\r\n        borderColor: \"#EE4900\",\r\n        borderCapStyle: \"butt\",\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: \"miter\",\r\n        pointBorderColor: \"#FFC436\",\r\n        pointBackgroundColor: \"#FFC436\",\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: \"#FFC436\",\r\n        pointHoverBorderColor: \"#FFC436\",\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: positiveIncrease,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const currentHealthCareData = {\r\n    labels: historicalDate,\r\n    datasets: [\r\n      {\r\n        label: \"Current Hospitalizations\",\r\n        fill: false,\r\n        lineTension: 0.1,\r\n        backgroundColor: \"rgba(75,192,192,0.4)\",\r\n        borderColor: \"rgba(75,192,192,1)\",\r\n        borderCapStyle: \"butt\",\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: \"miter\",\r\n        pointBorderColor: \"rgba(75,192,192,1)\",\r\n        pointBackgroundColor: \"#fff\",\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: currentHospitalization,\r\n      },\r\n      {\r\n        label: \"Current ICU Patients\",\r\n        fill: false,\r\n        lineTension: 0.1,\r\n        backgroundColor: \"#808080\",\r\n        borderColor: \"#808080\",\r\n        borderCapStyle: \"butt\",\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: \"miter\",\r\n        pointBorderColor: \"#f5f5f5\",\r\n        pointBackgroundColor: \"#fff\",\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: \"#f5f5f5\",\r\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: inIcuCurrently,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const customDateFormatter = (date) => {\r\n    const dateString = date.toString();\r\n    const year = dateString.substring(0, 4);\r\n    const month = dateString.substring(4, 6);\r\n    const day = dateString.substring(6, 8);\r\n    return `${month}/${day}/${year}`;\r\n  };\r\n\r\n  //console.log(historicalPositive);\r\n  //console.log(historicalDate);\r\n  //console.log(historical);\r\n  //console.log(positiveIncrease);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Fade bottom cascade>\r\n        <div>\r\n          <div>\r\n            <h3>Positive Cases</h3>\r\n            <Line data={totalPositiveData} />\r\n            <hr></hr>\r\n            <br />\r\n            <br />\r\n          </div>\r\n\r\n          <div>\r\n            <h3>Daily Increase in Positive Cases</h3>\r\n            <Line data={positiveIncreaseData} />\r\n            <hr></hr>\r\n            <br />\r\n            <br />\r\n          </div>\r\n\r\n          <div>\r\n            <h3>Current Health Care Statistics</h3>\r\n            <Line data={currentHealthCareData} />\r\n            <hr></hr>\r\n            <br />\r\n            <br />\r\n          </div>\r\n        </div>\r\n      </Fade>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Graphs;\r\n","import React from \"react\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport Graphs from \"./Graphs\";\r\n\r\nconst VisualizationsPerState = (props) => {\r\n  console.log(props);\r\n  return (\r\n    <div style={{ margin: \"1%\" }}>\r\n      <Fade>\r\n        <h1>{props.state}</h1>\r\n        <Graphs state={props.state} />\r\n      </Fade>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisualizationsPerState;\r\n","import React, { useState } from \"react\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport { Jumbotron, Button } from \"reactstrap\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"reactstrap\";\r\nimport VisualizationsPerState from \"./perStateData/VisualizationsPerState\";\r\n\r\nconst PerState = () => {\r\n  const stateDropdownArray = [\r\n    \"AK\",\r\n    \"AL\",\r\n    \"AR\",\r\n    \"AZ\",\r\n    \"CA\",\r\n    \"CO\",\r\n    \"CT\",\r\n    \"DE\",\r\n    \"FL\",\r\n    \"GA\",\r\n    \"HI\",\r\n    \"ID\",\r\n    \"IL\",\r\n    \"IN\",\r\n    \"IA\",\r\n    \"KS\",\r\n    \"KY\",\r\n    \"LA\",\r\n    \"ME\",\r\n    \"MD\",\r\n    \"MA\",\r\n    \"MI\",\r\n    \"MN\",\r\n    \"MS\",\r\n    \"MO\",\r\n    \"MT\",\r\n    \"NE\",\r\n    \"NV\",\r\n    \"NH\",\r\n    \"NJ\",\r\n    \"NM\",\r\n    \"NY\",\r\n    \"NC\",\r\n    \"ND\",\r\n    \"OH\",\r\n    \"OK\",\r\n    \"OR\",\r\n    \"PA\",\r\n    \"RI\",\r\n    \"SC\",\r\n    \"SD\",\r\n    \"TN\",\r\n    \"TX\",\r\n    \"UT\",\r\n    \"VT\",\r\n    \"VA\",\r\n    \"WA\",\r\n    \"WV\",\r\n    \"WI\",\r\n    \"WY\",\r\n  ];\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [selectedState, setSelectedState] = useState(\"\");\r\n  const [go, setGo] = useState(false);\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n\r\n  return (\r\n    <div style={{ margin: \"1%\" }}>\r\n      <Fade>\r\n        <Jumbotron>\r\n          <h1 className=\"display-5\">Data By State</h1>\r\n          <p className=\"lead\">\r\n            Select a US state for state-specific statistics.\r\n          </p>\r\n          <hr className=\"my-2\" />\r\n          <br />\r\n          <div style={{ marginBottom: \"1%\" }}>\r\n            <Dropdown\r\n              isOpen={dropdownOpen}\r\n              toggle={toggle}\r\n              onClick={() => setGo(false)}\r\n            >\r\n              <DropdownToggle caret>\r\n                {selectedState ? selectedState : \"Select State\"}\r\n              </DropdownToggle>\r\n              <DropdownMenu\r\n                modifiers={{\r\n                  setMaxHeight: {\r\n                    enabled: true,\r\n                    fn: (data) => {\r\n                      return {\r\n                        ...data,\r\n                        styles: {\r\n                          ...data.styles,\r\n                          overflow: \"auto\",\r\n                          maxHeight: \"30rem\",\r\n                        },\r\n                      };\r\n                    },\r\n                  },\r\n                }}\r\n              >\r\n                {stateDropdownArray.map((state) => (\r\n                  <DropdownItem\r\n                    onClick={() => {\r\n                      setSelectedState(state);\r\n                      setGo(false);\r\n                    }}\r\n                    key={state}\r\n                  >\r\n                    {state}\r\n                  </DropdownItem>\r\n                ))}\r\n              </DropdownMenu>\r\n            </Dropdown>\r\n          </div>\r\n          <p className=\"lead\">\r\n            {selectedState ? (\r\n              <Button color=\"primary\" onClick={() => setGo(true)}>\r\n                Go\r\n              </Button>\r\n            ) : (\r\n              <Button color=\"primary\" disabled>\r\n                Go\r\n              </Button>\r\n            )}\r\n          </p>\r\n        </Jumbotron>\r\n      </Fade>\r\n      {selectedState && go ? (\r\n        <div>\r\n          <VisualizationsPerState state={selectedState} go={go} />\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PerState;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport { Jumbotron } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"../../App.css\";\r\n\r\nfunction App() {\r\n  const [historicalPositive, sethistoricalPositive] = useState([]);\r\n  const [historicalDate, setHistoricalDate] = useState([]);\r\n  // eslint-disable-next-line\r\n  const [historical, setHistorical] = useState([]);\r\n  const [positiveIncrease, setPositiveIncrease] = useState([]);\r\n  const [death, setDeath] = useState([]);\r\n  const [currentHospitalization, setCurrentHospitalization] = useState([]);\r\n  const [inIcuCurrently, setInIcuCurrently] = useState([]);\r\n  const [recovered, setRecovered] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const resultHistorical = await axios(\r\n        \"https://covidtracking.com/api/v1/us/daily.json\"\r\n      );\r\n      sethistoricalPositive(\r\n        resultHistorical.data.map(({ positive }) => positive).reverse()\r\n      );\r\n      setDeath(resultHistorical.data.map(({ death }) => death).reverse());\r\n      setHistoricalDate(\r\n        resultHistorical.data\r\n          .map(({ date }) => customDateFormatter(date))\r\n          .reverse()\r\n      );\r\n      setPositiveIncrease(\r\n        resultHistorical.data\r\n          .map(({ positiveIncrease }) => positiveIncrease)\r\n          .reverse()\r\n      );\r\n      setHistorical(\r\n        resultHistorical.data.map(({ date, positive, positiveIncrease }) => {\r\n          return { date, positive, positiveIncrease };\r\n        })\r\n      );\r\n      setCurrentHospitalization(\r\n        resultHistorical.data\r\n          .map(({ hospitalizedCurrently }) => hospitalizedCurrently)\r\n          .reverse()\r\n      );\r\n      setInIcuCurrently(\r\n        resultHistorical.data\r\n          .map(({ inIcuCurrently }) => inIcuCurrently)\r\n          .reverse()\r\n      );\r\n      setRecovered(\r\n        resultHistorical.data.map(({ recovered }) => recovered).reverse()\r\n      );\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const totalPositiveData = {\r\n    labels: historicalDate,\r\n    datasets: [\r\n      {\r\n        label: \"Total Positive Cases\",\r\n        fill: false,\r\n        lineTension: 0.1,\r\n        backgroundColor: \"rgba(75,192,192,0.4)\",\r\n        borderColor: \"rgba(75,192,192,1)\",\r\n        borderCapStyle: \"butt\",\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: \"miter\",\r\n        pointBorderColor: \"rgba(75,192,192,1)\",\r\n        pointBackgroundColor: \"#fff\",\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: historicalPositive,\r\n      },\r\n      {\r\n        label: \"Total Deaths\",\r\n        fill: false,\r\n        lineTension: 0.1,\r\n        backgroundColor: \"#808080\",\r\n        borderColor: \"#808080\",\r\n        borderCapStyle: \"butt\",\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: \"miter\",\r\n        pointBorderColor: \"#f5f5f5\",\r\n        pointBackgroundColor: \"#fff\",\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: \"#f5f5f5\",\r\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: death,\r\n      },\r\n      {\r\n        label: \"Recovered\",\r\n        fill: false,\r\n        lineTension: 0.1,\r\n        backgroundColor: \"#73ffb3\",\r\n        borderColor: \"#73ffb3\",\r\n        borderCapStyle: \"butt\",\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: \"miter\",\r\n        pointBorderColor: \"#73ffb3\",\r\n        pointBackgroundColor: \"#fff\",\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: \"#fff\",\r\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: recovered,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const positiveIncreaseData = {\r\n    labels: historicalDate,\r\n    datasets: [\r\n      {\r\n        label: \"Daily Positive Increase\",\r\n        fill: false,\r\n        lineTension: 0.1,\r\n        backgroundColor: \"rgba(100,180,180,0.4)\",\r\n        borderColor: \"rgba(200,100,100,1)\",\r\n        borderCapStyle: \"butt\",\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: \"miter\",\r\n        pointBorderColor: \"#fffff\",\r\n        pointBackgroundColor: \"#ffff\",\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: \"#fffff\",\r\n        pointHoverBorderColor: \"#fffff\",\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: positiveIncrease,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const currentHealthCareData = {\r\n    labels: historicalDate,\r\n    datasets: [\r\n      {\r\n        label: \"Current Hospitalizations\",\r\n        fill: false,\r\n        lineTension: 0.1,\r\n        backgroundColor: \"rgba(75,192,192,0.4)\",\r\n        borderColor: \"rgba(75,192,192,1)\",\r\n        borderCapStyle: \"butt\",\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: \"miter\",\r\n        pointBorderColor: \"rgba(75,192,192,1)\",\r\n        pointBackgroundColor: \"#fff\",\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: currentHospitalization,\r\n      },\r\n      {\r\n        label: \"Current ICU Patients\",\r\n        fill: false,\r\n        lineTension: 0.1,\r\n        backgroundColor: \"#808080\",\r\n        borderColor: \"#808080\",\r\n        borderCapStyle: \"butt\",\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: \"miter\",\r\n        pointBorderColor: \"#f5f5f5\",\r\n        pointBackgroundColor: \"#fff\",\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: \"#f5f5f5\",\r\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: inIcuCurrently,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const customDateFormatter = (date) => {\r\n    const dateString = date.toString();\r\n    const year = dateString.substring(0, 4);\r\n    const month = dateString.substring(4, 6);\r\n    const day = dateString.substring(6, 8);\r\n    return `${month}/${day}/${year}`;\r\n  };\r\n\r\n  //console.log(historicalPositive);\r\n  //console.log(historicalDate);\r\n  //console.log(historical);\r\n  //console.log(positiveIncrease);\r\n\r\n  return (\r\n    <div>\r\n      <Fade>\r\n        <Jumbotron>\r\n          <h1 className=\"display-5\">Covid-19 Data Visualization</h1>\r\n          <p className=\"lead\">\r\n            On this page you will find data pertaining to cases of COVID-19\r\n            across the US\r\n          </p>\r\n          <hr className=\"my-2\" />\r\n          <p>Individual US state data is also available</p>\r\n          <p className=\"my-2\">\r\n            <Link to=\"/covid/perstate\"> Data by US State</Link>\r\n          </p>\r\n        </Jumbotron>\r\n      </Fade>\r\n      <div className=\"App\">\r\n        <Fade bottom cascade>\r\n          <div>\r\n            <div>\r\n              <h3>Positive Cases</h3>\r\n              <Line data={totalPositiveData} />\r\n              <hr></hr>\r\n              <br />\r\n              <br />\r\n            </div>\r\n\r\n            <div>\r\n              <h3>Daily Increase in Positive Cases</h3>\r\n              <Line data={positiveIncreaseData} />\r\n              <hr></hr>\r\n              <br />\r\n              <br />\r\n            </div>\r\n\r\n            <div>\r\n              <h3>Current Health Care Statistics</h3>\r\n              <Line data={currentHealthCareData} />\r\n              <hr></hr>\r\n              <br />\r\n              <br />\r\n            </div>\r\n          </div>\r\n        </Fade>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport Visualizations from \"./homeData/Visualizations\";\r\n\r\nimport \"../App.css\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div style={{ margin: \"1%\" }}>\r\n      <Visualizations />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  Nav,\r\n  NavItem,\r\n\r\n  //UncontrolledDropdown,\r\n  //DropdownToggle,\r\n  //DropdownMenu,\r\n  //DropdownItem,\r\n  NavbarText,\r\n} from \"reactstrap\";\r\nimport About from \"./components/About\";\r\nimport PerState from \"./components/PerState\";\r\nimport Home from \"./components/Home\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Navbar color=\"light\" light expand=\"md\">\r\n          <Link to=\"/covid/\" className=\"navbar-brand\">\r\n            Covid-19\r\n          </Link>\r\n          <NavbarToggler onClick={toggle} />\r\n          <Collapse isOpen={isOpen} navbar>\r\n            <Nav className=\"mr-auto\" navbar>\r\n              <NavItem>\r\n                <Link to=\"/covid/perstate\" className=\"nav-link\">\r\n                  Per State Data\r\n                </Link>\r\n              </NavItem>\r\n              <NavItem>\r\n                <Link to=\"/covid/about\" className=\"nav-link\">\r\n                  About\r\n                </Link>\r\n              </NavItem>\r\n              {/*\r\n              <UncontrolledDropdown nav inNavbar>\r\n                <DropdownToggle nav caret>\r\n                  More Information\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                  <DropdownItem>Option 1</DropdownItem>\r\n                  <DropdownItem>Option 2</DropdownItem>\r\n                  <DropdownItem divider />\r\n                  <DropdownItem>Reset</DropdownItem>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n             */}\r\n            </Nav>\r\n\r\n            <NavbarText>Information</NavbarText>\r\n          </Collapse>\r\n        </Navbar>\r\n        <Switch>\r\n          <Route path=\"/covid/perstate\" exact component={PerState} />\r\n          <Route path=\"/covid/about\" exact component={About} />\r\n          <Route path=\"/covid/\" exact component={Home} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}