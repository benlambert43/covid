{"version":3,"sources":["components/About.js","components/perStateData/Graphs.js","components/perStateData/VisualizationsPerState.js","components/PerState.js","components/homeData/Visualizations.js","components/Home.js","components/Upcoming.js","components/AnalysisData/AnalysisData.js","components/Analysis.js","App.js","serviceWorker.js","index.js"],"names":["About","style","margin","Jumbotron","className","href","target","rel","Graphs","props","useState","setCurrent","historicalPositive","sethistoricalPositive","historicalDate","setHistoricalDate","setHistorical","positiveIncrease","setPositiveIncrease","death","setDeath","currentHospitalization","setCurrentHospitalization","inIcuCurrently","setInIcuCurrently","recovered","setRecovered","useEffect","a","currentState","state","toLowerCase","axios","result","resultHistorical","data","map","positive","reverse","date","customDateFormatter","hospitalizedCurrently","fetchData","totalPositiveData","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","positiveIncreaseData","currentHealthCareData","dateString","toString","year","substring","month","day","marginRight","marginLeft","bottom","cascade","VisualizationsPerState","stateMetaData","setStateMetaData","current","stateAPI","currentAPI","marginTop","ListGroup","ListGroupItem","ListGroupItemHeading","name","ListGroupItemText","lastUpdateEt","dataQualityGrade","twitter","hospitalizedCumulative","notes","covid19Site","PerState","dropdownOpen","setDropdownOpen","selectedState","setSelectedState","go","setGo","marginBottom","Dropdown","isOpen","toggle","prevState","onClick","DropdownToggle","caret","DropdownMenu","modifiers","setMaxHeight","enabled","fn","styles","overflow","maxHeight","DropdownItem","key","Button","color","disabled","App","all","setAll","console","log","Toast","ToastHeader","ToastBody","to","e","Math","abs","currentHospitalizationsFromYesterday","total","Home","Visualizations","Upcoming","AnalysisData","item","Col","xs","Card","body","Row","CardText","deathIncrease","hospitalized","hospitalizedIncrease","onVentilatorCurrently","Spinner","Analysis","setIsOpen","Navbar","light","expand","NavbarToggler","Collapse","navbar","Nav","NavItem","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.aad960ef.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\nimport { Jumbotron } from \"reactstrap\";\nimport Fade from \"react-reveal/Fade\";\n\nconst About = () => {\n  return (\n    <div style={{ margin: \"1%\" }}>\n      <Fade>\n        <Jumbotron>\n          <h1 className=\"display-5\">About</h1>\n          <p className=\"lead\">\n            Open Source Project dedicated to graphing Covid-19\n          </p>\n          <hr className=\"my-2\" />\n          <br />\n\n          <p className=\"my-2\">\n            Open Source Repository:{\" \"}\n            <a\n              href=\"https://github.com/benlambert43/covid\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              https://github.com/benlambert43/covid\n            </a>\n          </p>\n          <p className=\"my-2\">\n            API Provided by{\" \"}\n            <a\n              href=\"https://covidtracking.com/api\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              https://covidtracking.com/api\n            </a>\n          </p>\n        </Jumbotron>\n      </Fade>\n    </div>\n  );\n};\n\nexport default About;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../../App.css\";\nimport { Line } from \"react-chartjs-2\";\nimport Fade from \"react-reveal/Fade\";\n\nfunction Graphs(props) {\n  // eslint-disable-next-line\n  const [current, setCurrent] = useState({});\n  const [historicalPositive, sethistoricalPositive] = useState([]);\n  const [historicalDate, setHistoricalDate] = useState([]);\n  // eslint-disable-next-line\n  const [historical, setHistorical] = useState([]);\n  const [positiveIncrease, setPositiveIncrease] = useState([]);\n  const [death, setDeath] = useState([]);\n  const [currentHospitalization, setCurrentHospitalization] = useState([]);\n  const [inIcuCurrently, setInIcuCurrently] = useState([]);\n  const [recovered, setRecovered] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const currentState = props.state.toLowerCase();\n      const result = await axios(\n        `https://covidtracking.com/api/v1/states/${currentState}/current.json`\n      );\n      const resultHistorical = await axios(\n        `https://covidtracking.com/api/v1/states/${currentState}/daily.json`\n      );\n      setCurrent(result.data);\n      sethistoricalPositive(\n        resultHistorical.data.map(({ positive }) => positive).reverse()\n      );\n      setDeath(resultHistorical.data.map(({ death }) => death).reverse());\n      setHistoricalDate(\n        resultHistorical.data\n          .map(({ date }) => customDateFormatter(date))\n          .reverse()\n      );\n      setPositiveIncrease(\n        resultHistorical.data\n          .map(({ positiveIncrease }) => positiveIncrease)\n          .reverse()\n      );\n      setHistorical(\n        resultHistorical.data.map(({ date, positive, positiveIncrease }) => {\n          return { date, positive, positiveIncrease };\n        })\n      );\n      setCurrentHospitalization(\n        resultHistorical.data\n          .map(({ hospitalizedCurrently }) => hospitalizedCurrently)\n          .reverse()\n      );\n      setInIcuCurrently(\n        resultHistorical.data\n          .map(({ inIcuCurrently }) => inIcuCurrently)\n          .reverse()\n      );\n      setRecovered(\n        resultHistorical.data.map(({ recovered }) => recovered).reverse()\n      );\n    };\n    fetchData();\n    // eslint-disable-next-line\n  }, []);\n\n  const totalPositiveData = {\n    labels: historicalDate,\n    datasets: [\n      {\n        label: \"Total Positive Cases\",\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: \"rgba(75,192,192,0.4)\",\n        borderColor: \"rgba(75,192,192,1)\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"rgba(75,192,192,1)\",\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: historicalPositive,\n      },\n      {\n        label: \"Total Deaths\",\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: \"#808080\",\n        borderColor: \"#808080\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"#f5f5f5\",\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"#f5f5f5\",\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: death,\n      },\n      {\n        label: \"Recovered\",\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: \"green\",\n        borderColor: \"green\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"#f5f5f5\",\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"#f5f5f5\",\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: recovered,\n      },\n    ],\n  };\n\n  const positiveIncreaseData = {\n    labels: historicalDate,\n    datasets: [\n      {\n        label: \"Daily Increase in Positive Cases\",\n        fill: false,\n        lineTension: 0.3,\n        backgroundColor: \"#EE4900\",\n        borderColor: \"#EE4900\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"#FFC436\",\n        pointBackgroundColor: \"#FFC436\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"#FFC436\",\n        pointHoverBorderColor: \"#FFC436\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: positiveIncrease,\n      },\n    ],\n  };\n\n  const currentHealthCareData = {\n    labels: historicalDate,\n    datasets: [\n      {\n        label: \"Current Hospitalizations\",\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: \"rgba(75,192,192,0.4)\",\n        borderColor: \"rgba(75,192,192,1)\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"rgba(75,192,192,1)\",\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: currentHospitalization,\n      },\n      {\n        label: \"Current ICU Patients\",\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: \"#808080\",\n        borderColor: \"#808080\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"#f5f5f5\",\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"#f5f5f5\",\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: inIcuCurrently,\n      },\n    ],\n  };\n\n  const customDateFormatter = (date) => {\n    const dateString = date.toString();\n    const year = dateString.substring(0, 4);\n    const month = dateString.substring(4, 6);\n    const day = dateString.substring(6, 8);\n    return `${month}/${day}/${year}`;\n  };\n\n  //console.log(historicalPositive);\n  //console.log(historicalDate);\n  //console.log(historical);\n  //console.log(positiveIncrease);\n\n  return (\n    <div className=\"App\" style={{ marginRight: \"5%\", marginLeft: \"5%\" }}>\n      <Fade bottom cascade>\n        <div>\n          <div>\n            <h3>Positive Cases</h3>\n            <Line data={totalPositiveData} />\n            <hr></hr>\n            <br />\n            <br />\n          </div>\n\n          <div>\n            <h3>Daily Increase in Positive Cases</h3>\n            <Line data={positiveIncreaseData} />\n            <hr></hr>\n            <br />\n            <br />\n          </div>\n\n          <div>\n            <h3>Current Health Care Statistics</h3>\n            <Line data={currentHealthCareData} />\n            <hr></hr>\n            <br />\n            <br />\n          </div>\n        </div>\n      </Fade>\n    </div>\n  );\n}\n\nexport default Graphs;\n","import React, { useState, useEffect } from \"react\";\nimport Fade from \"react-reveal/Fade\";\nimport axios from \"axios\";\nimport Graphs from \"./Graphs\";\nimport {\n  ListGroup,\n  ListGroupItem,\n  ListGroupItemHeading,\n  ListGroupItemText,\n} from \"reactstrap\";\n\nconst VisualizationsPerState = (props) => {\n  const [stateMetaData, setStateMetaData] = useState({});\n  const [current, setCurrent] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const currentState = props.state.toLowerCase();\n      const stateAPI = await axios(\n        `https://covidtracking.com/api/v1/states/${currentState}/info.json`\n      );\n      const currentAPI = await axios(\n        `https://covidtracking.com/api/v1/states/${currentState}/current.json`\n      );\n      setStateMetaData(stateAPI);\n      setCurrent(currentAPI);\n    };\n    fetchData();\n    // eslint-disable-next-line\n  }, []);\n  return (\n    <div style={{ margin: \"1%\" }}>\n      <Fade>\n        <div style={{ marginTop: \"5%\", marginRight: \"5%\", marginLeft: \"5%\" }}>\n          <ListGroup>\n            <ListGroupItem>\n              <ListGroupItemHeading>\n                <b>{stateMetaData.data ? stateMetaData.data.name : <b></b>}</b>\n              </ListGroupItemHeading>\n              <ListGroupItemText>\n                Last updated:{\" \"}\n                {current.data ? current.data.lastUpdateEt : <b></b>}\n                <br />\n                Data quality grade:{\" \"}\n                {current.data ? current.data.dataQualityGrade : <b></b>}\n                <br />\n                Twitter handle:{\" \"}\n                {stateMetaData.data ? stateMetaData.data.twitter : <b></b>}\n              </ListGroupItemText>\n            </ListGroupItem>\n            <ListGroupItem>\n              <ListGroupItemHeading>Overview</ListGroupItemHeading>\n              {current.data ? (\n                <ListGroupItemText>\n                  Total Positive Cases: {current.data.positive} <br />\n                  Total Hospitalized: {current.data.hospitalizedCumulative}{\" \"}\n                  <br />\n                  Total Deaths: {current.data.death} <br />\n                  Currently Hospitalized: {\n                    current.data.hospitalizedCurrently\n                  }{\" \"}\n                  <br />\n                  New cases from yesterday: {current.data.positiveIncrease}\n                  <br />\n                </ListGroupItemText>\n              ) : (\n                <b></b>\n              )}\n            </ListGroupItem>\n\n            {stateMetaData.data ? (\n              stateMetaData.data.notes ? (\n                <ListGroupItem>\n                  <ListGroupItemHeading>Additional Notes</ListGroupItemHeading>\n                  <ListGroupItemText>\n                    {stateMetaData.data.notes}{\" \"}\n                  </ListGroupItemText>\n                </ListGroupItem>\n              ) : (\n                \"\"\n              )\n            ) : (\n              <b></b>\n            )}\n\n            <ListGroupItem>\n              <ListGroupItemText>\n                {stateMetaData.data ? (\n                  <a\n                    href={stateMetaData.data.covid19Site}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    Data Source for {stateMetaData.data.name}\n                  </a>\n                ) : (\n                  <b></b>\n                )}\n              </ListGroupItemText>\n            </ListGroupItem>\n          </ListGroup>\n        </div>\n        <div style={{ marginTop: \"5%\" }}>\n          <Graphs state={props.state} />\n        </div>\n      </Fade>\n    </div>\n  );\n};\n\nexport default VisualizationsPerState;\n","import React, { useState } from \"react\";\nimport Fade from \"react-reveal/Fade\";\nimport { Jumbotron, Button } from \"reactstrap\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from \"reactstrap\";\nimport VisualizationsPerState from \"./perStateData/VisualizationsPerState\";\n\nconst PerState = () => {\n  const stateDropdownArray = [\n    \"AK\",\n    \"AL\",\n    \"AR\",\n    \"AZ\",\n    \"CA\",\n    \"CO\",\n    \"CT\",\n    \"DE\",\n    \"FL\",\n    \"GA\",\n    \"HI\",\n    \"ID\",\n    \"IL\",\n    \"IN\",\n    \"IA\",\n    \"KS\",\n    \"KY\",\n    \"LA\",\n    \"ME\",\n    \"MD\",\n    \"MA\",\n    \"MI\",\n    \"MN\",\n    \"MS\",\n    \"MO\",\n    \"MT\",\n    \"NE\",\n    \"NV\",\n    \"NH\",\n    \"NJ\",\n    \"NM\",\n    \"NY\",\n    \"NC\",\n    \"ND\",\n    \"OH\",\n    \"OK\",\n    \"OR\",\n    \"PA\",\n    \"RI\",\n    \"SC\",\n    \"SD\",\n    \"TN\",\n    \"TX\",\n    \"UT\",\n    \"VT\",\n    \"VA\",\n    \"WA\",\n    \"WV\",\n    \"WI\",\n    \"WY\",\n  ];\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [selectedState, setSelectedState] = useState(\"\");\n  const [go, setGo] = useState(false);\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\n\n  return (\n    <div style={{ margin: \"1%\" }}>\n      <Fade>\n        <Jumbotron>\n          <h1 className=\"display-5\">Data By State</h1>\n          <p className=\"lead\">\n            Select a US state for state-specific statistics.\n          </p>\n          <hr className=\"my-2\" />\n          <br />\n          <div style={{ marginBottom: \"1%\" }}>\n            <Dropdown\n              isOpen={dropdownOpen}\n              toggle={toggle}\n              onClick={() => setGo(false)}\n            >\n              <DropdownToggle caret>\n                {selectedState ? selectedState : \"Select State\"}\n              </DropdownToggle>\n              <DropdownMenu\n                modifiers={{\n                  setMaxHeight: {\n                    enabled: true,\n                    fn: (data) => {\n                      return {\n                        ...data,\n                        styles: {\n                          ...data.styles,\n                          overflow: \"auto\",\n                          maxHeight: \"30rem\",\n                        },\n                      };\n                    },\n                  },\n                }}\n              >\n                {stateDropdownArray.map((state) => (\n                  <DropdownItem\n                    onClick={() => {\n                      setSelectedState(state);\n                      setGo(false);\n                    }}\n                    key={state}\n                  >\n                    {state}\n                  </DropdownItem>\n                ))}\n              </DropdownMenu>\n            </Dropdown>\n          </div>\n          <p className=\"lead\">\n            {selectedState ? (\n              <Button color=\"primary\" onClick={() => setGo(true)}>\n                Go\n              </Button>\n            ) : (\n              <Button color=\"primary\" disabled>\n                Go\n              </Button>\n            )}\n          </p>\n        </Jumbotron>\n      </Fade>\n      {selectedState && go ? (\n        <div>\n          <VisualizationsPerState state={selectedState} go={go} />\n        </div>\n      ) : (\n        <div></div>\n      )}\n    </div>\n  );\n};\n\nexport default PerState;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Line } from \"react-chartjs-2\";\nimport Fade from \"react-reveal/Fade\";\nimport { Jumbotron } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport {\n  ListGroup,\n  ListGroupItem,\n  ListGroupItemHeading,\n  ListGroupItemText,\n} from \"reactstrap\";\nimport { Toast, ToastBody, ToastHeader } from \"reactstrap\";\n\nimport \"../../App.css\";\n\nfunction App() {\n  const [historicalPositive, sethistoricalPositive] = useState([]);\n  const [historicalDate, setHistoricalDate] = useState([]);\n  // eslint-disable-next-line\n  const [historical, setHistorical] = useState([]);\n  const [positiveIncrease, setPositiveIncrease] = useState([]);\n  const [death, setDeath] = useState([]);\n  const [currentHospitalization, setCurrentHospitalization] = useState([]);\n  const [inIcuCurrently, setInIcuCurrently] = useState([]);\n  const [recovered, setRecovered] = useState([]);\n  const [all, setAll] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const resultHistorical = await axios(\n        \"https://covidtracking.com/api/v1/us/daily.json\"\n      );\n      sethistoricalPositive(\n        resultHistorical.data.map(({ positive }) => positive).reverse()\n      );\n      setDeath(resultHistorical.data.map(({ death }) => death).reverse());\n      setHistoricalDate(\n        resultHistorical.data\n          .map(({ date }) => customDateFormatter(date))\n          .reverse()\n      );\n      setPositiveIncrease(\n        resultHistorical.data\n          .map(({ positiveIncrease }) => positiveIncrease)\n          .reverse()\n      );\n      setHistorical(\n        resultHistorical.data.map(({ date, positive, positiveIncrease }) => {\n          return { date, positive, positiveIncrease };\n        })\n      );\n      setCurrentHospitalization(\n        resultHistorical.data\n          .map(({ hospitalizedCurrently }) => hospitalizedCurrently)\n          .reverse()\n      );\n      setInIcuCurrently(\n        resultHistorical.data\n          .map(({ inIcuCurrently }) => inIcuCurrently)\n          .reverse()\n      );\n      setRecovered(\n        resultHistorical.data.map(({ recovered }) => recovered).reverse()\n      );\n      setAll(resultHistorical.data);\n    };\n    fetchData();\n  }, []);\n\n  const totalPositiveData = {\n    labels: historicalDate,\n    datasets: [\n      {\n        label: \"Total Positive Cases\",\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: \"rgba(75,192,192,0.4)\",\n        borderColor: \"rgba(75,192,192,1)\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"rgba(75,192,192,1)\",\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: historicalPositive,\n      },\n      {\n        label: \"Total Deaths\",\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: \"#808080\",\n        borderColor: \"#808080\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"#f5f5f5\",\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"#f5f5f5\",\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: death,\n      },\n      {\n        label: \"Recovered\",\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: \"green\",\n        borderColor: \"green\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"#f5f5f5\",\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"#f5f5f5\",\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: recovered,\n      },\n    ],\n  };\n\n  const positiveIncreaseData = {\n    labels: historicalDate,\n    datasets: [\n      {\n        label: \"Daily Increase in Positive Cases\",\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: \"#EE4900\",\n        borderColor: \"#EE4900\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"#FFC436\",\n        pointBackgroundColor: \"#FFC436\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"#FFC436\",\n        pointHoverBorderColor: \"#FFC436\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: positiveIncrease,\n      },\n    ],\n  };\n\n  const currentHealthCareData = {\n    labels: historicalDate,\n    datasets: [\n      {\n        label: \"Current Hospitalizations\",\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: \"rgba(75,192,192,0.4)\",\n        borderColor: \"rgba(75,192,192,1)\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"rgba(75,192,192,1)\",\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: currentHospitalization,\n      },\n      {\n        label: \"Current ICU Patients\",\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: \"#808080\",\n        borderColor: \"#808080\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"#f5f5f5\",\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"#f5f5f5\",\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: inIcuCurrently,\n      },\n    ],\n  };\n\n  const customDateFormatter = (date) => {\n    const dateString = date.toString();\n    const year = dateString.substring(0, 4);\n    const month = dateString.substring(4, 6);\n    const day = dateString.substring(6, 8);\n    return `${month}/${day}/${year}`;\n  };\n\n  //console.log(historicalPositive);\n  //console.log(historicalDate);\n  console.log(all[0]);\n  //console.log(positiveIncrease);\n  const currentHospitalizationsFromYesterday = () => {\n    const e = all[0].hospitalizedCurrently - all[1].hospitalizedCurrently;\n    if (e > 0) {\n      return `an increase of ${Math.abs(e)}`;\n    }\n    if (e < 0) {\n      return `a decrease of ${Math.abs(e)}`;\n    }\n    return ` which did not change `;\n  };\n\n  return (\n    <div>\n      <div className=\"p-3 bg-info my-2 rounded\">\n        <Toast>\n          <ToastHeader>Data Point Analysis is in Development</ToastHeader>\n          <ToastBody>\n            <Link to=\"/covid/analysis\" className=\"nav-link\">\n              Data Point Analysis\n            </Link>\n            <Link to=\"/covid/upcoming\" className=\"nav-link\">\n              Read about development goals\n            </Link>\n          </ToastBody>\n        </Toast>\n      </div>\n      <Fade>\n        <Jumbotron>\n          <h1 className=\"display-5\">Covid-19 US National Data Visualization</h1>\n          <p className=\"lead\">\n            On this page you will find data pertaining to cases of COVID-19\n            across the US including visualizations for positive cases, daily\n            increase in positive cases and trends in healthcare status\n            <br />\n          </p>\n          <hr className=\"my-2\" />\n          <p>Individual US state data is also available</p>\n          <p className=\"my-2\">\n            <Link to=\"/covid/perstate\"> Data by US State</Link>\n          </p>\n        </Jumbotron>\n        <ListGroup>\n          <ListGroupItem>\n            <ListGroupItemHeading>\n              Current Total Number of Positive Cases\n            </ListGroupItemHeading>\n            <ListGroupItemText>\n              <b>{all[0] ? all[0].positive : <b></b>}</b>, an increase of{\" \"}\n              {all[0] ? all[0].positiveIncrease : <b></b>} more than yesterday.\n            </ListGroupItemText>\n          </ListGroupItem>\n          <ListGroupItem>\n            <ListGroupItemHeading>\n              Current Hospitalizations\n            </ListGroupItemHeading>\n            <ListGroupItemText>\n              <b>{all[0] ? all[0].hospitalizedCurrently : <b></b>}</b>,{\" \"}\n              {all[0] ? currentHospitalizationsFromYesterday() : <b></b>} from\n              yesterday.\n            </ListGroupItemText>\n          </ListGroupItem>\n          <ListGroupItem>\n            <ListGroupItemHeading>Current Mortality Rate</ListGroupItemHeading>\n            <ListGroupItemText>\n              Confirmed Positive Cases:{\" \"}\n              <b>{all[0] ? all[0].death / all[0].positive : <b></b>}</b>\n              <br />\n              Total: <b>{all[0] ? all[0].death / all[0].total : <b></b>}</b>\n            </ListGroupItemText>\n          </ListGroupItem>\n        </ListGroup>\n        <br></br>\n        <br></br>\n        <hr></hr>\n        <br></br>\n      </Fade>\n      <div className=\"App\" style={{ marginRight: \"5%\", marginLeft: \"5%\" }}>\n        <Fade bottom cascade>\n          <div>\n            <div>\n              <h3>Positive Cases</h3>\n              <Line data={totalPositiveData} />\n              <hr></hr>\n              <br />\n              <br />\n            </div>\n\n            <div>\n              <h3>Daily Increase in Positive Cases</h3>\n              <Line data={positiveIncreaseData} />\n              <hr></hr>\n              <br />\n              <br />\n            </div>\n\n            <div>\n              <h3>Current Health Care Statistics</h3>\n              <Line data={currentHealthCareData} />\n              <hr></hr>\n              <br />\n              <br />\n            </div>\n          </div>\n        </Fade>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport Visualizations from \"./homeData/Visualizations\";\n\nimport \"../App.css\";\n\nconst Home = () => {\n  return (\n    <div style={{ margin: \"1%\" }}>\n      <Visualizations />\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport \"../App.css\";\nimport { Jumbotron } from \"reactstrap\";\nimport Fade from \"react-reveal/Fade\";\nconst Upcoming = () => {\n  return (\n    <div style={{ margin: \"1%\" }}>\n      <Fade>\n        <Jumbotron>\n          <h1 className=\"display-5\">Upcoming Features</h1>\n          <p className=\"lead\">Planned additions to the site.</p>\n          <hr className=\"my-2\" />\n          <br />\n\n          <div className=\"my-2\">\n            <ol>\n              <li>\n                Creating a matrix of COVID-19 related headlines for public\n                policy, compared against the rate of increasing cases (for the\n                current week as well as the next week), with the goal of\n                estimating how certain public policies affect the spread of\n                COVID-19\n              </li>\n            </ol>\n          </div>\n        </Jumbotron>\n      </Fade>\n    </div>\n  );\n};\n\nexport default Upcoming;\n","import React, { useState, useEffect } from \"react\";\nimport Fade from \"react-reveal/Fade\";\nimport axios from \"axios\";\nimport { Spinner, Row } from \"reactstrap\";\nimport { Card, CardText, Col } from \"reactstrap\";\nimport \"../../App.css\";\n\nconst AnalysisData = () => {\n  const [all, setAll] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(\n        \"https://covidtracking.com/api/v1/us/daily.json\"\n      );\n      setAll(result.data);\n      //all.sort((a, b) => (a.positiveIncrease < b.positiveIncrease ? 1 : -1));\n    };\n    fetchData();\n  }, []);\n\n  const customDateFormatter = (date) => {\n    const dateString = date.toString();\n    const year = dateString.substring(0, 4);\n    const month = dateString.substring(4, 6);\n    const day = dateString.substring(6, 8);\n    return `${month}/${day}/${year}`;\n  };\n\n  const inFlight = () => {\n    console.log(all, \" in flight.\");\n    return (\n      <div className=\"App\">\n        <Spinner />\n      </div>\n    );\n  };\n\n  const notInFlight = () => {\n    //console.log(all, \" returned.\");\n\n    return (\n      <Fade bottom>\n        {all.map((item) => (\n          <Col xs=\"auto\" key={item.date}>\n            <div style={{ marginTop: \"3%\" }}>\n              <Card body>\n                <h2>\n                  <b>{customDateFormatter(item.date)}</b>\n                </h2>\n                <br />\n                Statistics for {customDateFormatter(item.date)}:\n                <hr />\n                <Row>\n                  <Col xs=\"6\">\n                    <b>Increase in positive cases from yesterday: </b>\n                  </Col>\n                  <Col>\n                    <b>{item.positiveIncrease}</b>\n                  </Col>\n                </Row>\n                <hr />\n                <Row>\n                  <Col xs=\"6\">\n                    <CardText>Death: </CardText>\n                  </Col>\n                  <Col>{item.death}</Col>\n                </Row>\n                <hr />\n                <Row>\n                  <Col xs=\"6\">Increase in deaths from yesterday:</Col>\n                  <Col>{item.deathIncrease}</Col>\n                </Row>\n                <hr />\n                <Row>\n                  <Col xs=\"6\">Hospitalized: </Col>\n                  <Col>{item.hospitalized}</Col>\n                </Row>\n                <hr />\n                <Row>\n                  <Col xs=\"6\">Currently Hospitalized:</Col>\n                  <Col>{item.hospitalizedCurrently}</Col>\n                </Row>\n                <hr />\n                <Row>\n                  <Col xs=\"6\">\n                    Increase in hospitalizations from yesterday:{\" \"}\n                  </Col>\n                  <Col>{item.hospitalizedIncrease}</Col>\n                </Row>\n                <hr />\n                <Row>\n                  <Col xs=\"6\">Currently in ICU: </Col>\n                  <Col>{item.inIcuCurrently}</Col>\n                </Row>\n                <hr />\n                <Row>\n                  <Col xs=\"6\">On ventilator currently: </Col>\n                  <Col>{item.onVentilatorCurrently}</Col>\n                </Row>\n                <hr />\n                <Row>\n                  <Col xs=\"6\">Positive Cases: </Col>\n                  <Col>{item.positive}</Col>\n                </Row>\n                <hr />\n                <Row>\n                  <Col xs=\"6\">Recovered: </Col>\n                  <Col>{item.recovered}</Col>\n                </Row>\n                <hr />\n                <Row>\n                  <Col xs=\"6\">Total: </Col>\n                  <Col>{item.total}</Col>\n                </Row>\n                <hr />\n              </Card>\n            </div>\n          </Col>\n        ))}\n      </Fade>\n    );\n  };\n\n  return <div>{all[0] ? notInFlight() : inFlight()}</div>;\n};\n\nexport default AnalysisData;\n","import React from \"react\";\nimport \"../App.css\";\nimport { Jumbotron } from \"reactstrap\";\nimport Fade from \"react-reveal/Fade\";\nimport AnalysisData from \"./AnalysisData/AnalysisData\";\n\nconst Analysis = () => {\n  return (\n    <div style={{ margin: \"1%\" }}>\n      <Fade>\n        <Jumbotron>\n          <h1 className=\"display-5\"> Data Point Analysis </h1>\n          <p className=\"lead\">\n            In development. This page will display news headlines for the\n            current date as well as the headlines from 3 weeks ago (pertaining\n            to Covid-19 policy actions). There will be an option to sort by date\n            in the future, however for now the data is sorted by increase in\n            positive cases since the previous day.\n          </p>\n          <hr className=\"my-2\" />\n          <br />\n\n          <div className=\"my-2\"></div>\n        </Jumbotron>\n        <div>\n          <AnalysisData />\n        </div>\n      </Fade>\n    </div>\n  );\n};\n\nexport default Analysis;\n","import React, { useState } from \"react\";\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { Collapse, Navbar, NavbarToggler, Nav, NavItem } from \"reactstrap\";\nimport About from \"./components/About\";\nimport PerState from \"./components/PerState\";\nimport Home from \"./components/Home\";\nimport \"./App.css\";\nimport Upcoming from \"./components/Upcoming\";\nimport Analysis from \"./components/Analysis\";\n\nfunction App() {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n  return (\n    <Router>\n      <div>\n        <Navbar color=\"light\" light expand=\"md\">\n          <Link to=\"/\" className=\"navbar-brand\">\n            COVID-19 US Data\n          </Link>\n          <NavbarToggler onClick={toggle} />\n          <Collapse isOpen={isOpen} navbar>\n            <Nav className=\"mr-auto\" navbar>\n              <NavItem>\n                <Link to=\"/covid/perstate\" className=\"nav-link\">\n                  Per State Data\n                </Link>\n              </NavItem>\n              <NavItem>\n                <Link to=\"/covid/analysis\" className=\"nav-link\">\n                  Data Point Analysis\n                </Link>\n              </NavItem>\n              <NavItem>\n                <Link to=\"/covid/about\" className=\"nav-link\">\n                  About\n                </Link>\n              </NavItem>\n              <NavItem>\n                {\" \"}\n                <Link to=\"/covid/upcoming\" className=\"nav-link\">\n                  Upcoming Features\n                </Link>\n              </NavItem>\n              {/*\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                  More Information\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem>Option 1</DropdownItem>\n                  <DropdownItem>Option 2</DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem>Reset</DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n             */}\n            </Nav>\n\n            {/*\n            <NavbarText>Information</NavbarText>\n            */}\n          </Collapse>\n        </Navbar>\n        <Switch>\n          <Route path=\"/covid/perstate\" exact component={PerState} />\n          <Route path=\"/covid/about\" exact component={About} />\n          <Route path=\"/covid/upcoming\" exact component={Upcoming} />\n          <Route path=\"/covid/analysis\" exact component={Analysis} />\n          <Route path=\"/\" exact component={Home} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}